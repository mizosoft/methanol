[versions]
junit = "5.13.4"
reactivestreams = "1.0.4"
checkerframework = "3.49.5"
gson = "2.13.1"
# minimum version required at run time
jackson = "2.10.0"
protobuf = "4.31.1"
errorprone = "2.41.0"
brotli-dec = "0.1.2"
okhttp = "5.1.0"
jmh = "1.37"
reactor = "3.7.8"
nullaway-core = "0.12.8"
jaxb-api = "2.3.1"
jaxb-impl = "2.3.9"
jaxb-jakarta-api = "4.0.2"
jaxb-jakarta-impl = "4.0.5"
moxy = "2.7.16"
jsoup = "1.21.1"
testng = "7.11.0"
jimfs = "1.3.1"
assertj = "3.27.3"
awaitility = "4.3.0"
hamcrest = "3.0"
spring-boot = "3.5.4"
autoservice = "1.1.1"
bson4jackson = "2.18.0"
jacoco = "0.8.8"
lettuce = "6.7.1.RELEASE"
javaparser = "3.25.3"
mockito = "5.18.0"
javafx-platform = "17.0.10"
quarkus = "3.25.2"
commons-math3 = "3.6.1"
kotlinx-coroutines = "1.10.2"
kotlinx-serialization = "1.9.0"
assertk = "0.28.1"
kotlin = "2.2.20"
moshi = "1.15.2"
versions-plugin = "0.52.0"
nexus-publish = "2.0.0"
protobuf-plugin = "0.9.5"
shadow-plugin = "9.1.0"
extraJavaModuleInfo-plugin = "1.13"
javafx-plugin = "0.1.0"
checkerframework-plugin = "0.6.56"
errorprone-plugin = "4.1.0"
nullaway-plugin = "1.5.0"
graalvm-plugin = "0.10.1"
kotlin-serialization-plugin = "2.1.0"
dokka-plugin = "1.9.20"
coveralls-jacoco-plugin = "1.2.20"

[libraries]
junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }
reactivestreams-tck-flow = { module = "org.reactivestreams:reactive-streams-tck-flow", version.ref = "reactivestreams" }
reactivestreams = { module = "org.reactivestreams:reactive-streams", version.ref = "reactivestreams" }
checkerframework = { module = "org.checkerframework:checker", version.ref = "checkerframework" }
checkerframework-qual = { module = "org.checkerframework:checker-qual", version.ref = "checkerframework" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "protobuf" }
protobuf-compiler = { module = "com.google.protobuf:protoc", version.ref = "protobuf" }
errorprone = { module = "com.google.errorprone:error_prone_core", version.ref = "errorprone" }
errorprone-annotations = { module = "com.google.errorprone:error_prone_annotations", version.ref = "errorprone" }
brotli-dec = { module = "org.brotli:dec", version.ref = "brotli-dec" }
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver3", version.ref = "okhttp" }
jmh-core = { module = "org.openjdk.jmh:jmh-core", version.ref = "jmh" }
jmh-annprocess = { module = "org.openjdk.jmh:jmh-generator-annprocess", version.ref = "jmh" }
okhttp-tls = { module = "com.squareup.okhttp3:okhttp-tls", version.ref = "okhttp" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
reactor-core = { module = "io.projectreactor:reactor-core", version.ref = "reactor" }
nullaway = { module = "com.uber.nullaway:nullaway", version.ref = "nullaway-core" }
jaxb-api = { module = "javax.xml.bind:jaxb-api", version.ref = "jaxb-api" }
jaxb-impl = { module = "com.sun.xml.bind:jaxb-impl", version.ref = "jaxb-impl" }
jaxb-jakarta-api = { module = "jakarta.xml.bind:jakarta.xml.bind-api", version.ref = "jaxb-jakarta-api" }
jaxb-jakarta-impl = { module = "com.sun.xml.bind:jaxb-impl", version.ref = "jaxb-jakarta-impl" }
moxy = { module = "org.eclipse.persistence:org.eclipse.persistence.moxy", version.ref = "moxy" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
testng = { module = "org.testng:testng", version.ref = "testng" }
junit-params = { module = "org.junit.jupiter:junit-jupiter-params" }
jimfs = { module = "com.google.jimfs:jimfs", version.ref = "jimfs" }
assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }
awaitility = { module = "org.awaitility:awaitility", version.ref = "awaitility" }
hamcrest = { module = "org.hamcrest:hamcrest", version.ref = "hamcrest" }
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
autoservice-annotations = { module = "com.google.auto.service:auto-service-annotations", version.ref = "autoservice" }
autoservice-annprocess = { module = "com.google.auto.service:auto-service", version.ref = "autoservice" }
jackson-xml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-xml", version.ref = "jackson" }
jackson-protobuf = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-protobuf", version.ref = "jackson" }
jackson-avro = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-avro", version.ref = "jackson" }
bson4jackson = { module = "de.undercouch:bson4jackson", version.ref = "bson4jackson" }
lettuce = { module = "io.lettuce:lettuce-core", version.ref = "lettuce" }
javaparser = { module = "com.github.javaparser:javaparser-symbol-solver-core", version.ref = "javaparser" }
mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }
quarkus-rest-jackson = { module = "io.quarkus:quarkus-rest-jackson" }
quarkus-junit5 = { module = "io.quarkus:quarkus-junit5" }
rest-assured = { module = "io.rest-assured:rest-assured" }
quarkus-bom = { module = "io.quarkus.platform:quarkus-bom", version.ref = "quarkus" }
commons-math3 = { module = "org.apache.commons:commons-math3", version.ref = "commons-math3" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-serialization-protobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf", version.ref = "kotlinx-serialization" }
assertk = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertk" }
moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }

[plugins]
versions = { id = "com.github.ben-manes.versions", version.ref = "versions-plugin" }
protobuf = { id = "com.google.protobuf", version.ref = "protobuf-plugin" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management" }
shadow = { id = "com.gradleup.shadow", version.ref = "shadow-plugin" }
extraJavaModuleInfo = { id = "org.gradlex.extra-java-module-info", version.ref = "extraJavaModuleInfo-plugin" }
javafx = { id = "org.openjfx.javafxplugin", version.ref = "javafx-plugin" }
nexus-publish = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "nexus-publish" }
quarkus = { id = "io.quarkus", version.ref = "quarkus" }
graalvm = { id = "org.graalvm.buildtools.native", version.ref = "graalvm-plugin" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka-plugin" }
errorprone = { id = "net.ltgt.errorprone", version.ref = "errorprone-plugin" }
nullaway = { id = "net.ltgt.nullaway", version.ref = "nullaway-plugin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
checkerframework = { id = "org.checkerframework", version.ref = "checkerframework-plugin" }
coveralls-jacoco = { id = "com.github.nbaztec.coveralls-jacoco", version.ref = "coveralls-jacoco-plugin" }
