dependencies {
  // Use latest version of TestNG as the one used by tck-flow is really old.
  // A recent feature currently in use is CONSTRUCTOR target for @Factory.
  testImplementation deps.testng
  testImplementation deps.junitParams
  testImplementation deps.reactiveStreamsTckFlow
  testImplementation deps.mockWebServer
  testImplementation deps.jimfs
  testImplementation project(':methanol-testutils')
}

// TestNG transitively brings an old checkerframework artifact,
// which causes its packages to be read from two modules.
configurations.testImplementation {
  exclude group: 'org.checkerframework', module: 'checker-compat-qual'
}

compileJava {
  // Suppress exporting to modules unresolvable on compilation
  options.compilerArgs += '-Xlint:-module'
}

test {
  exclude '**/tck/**'
  // Run from classpath to use META-INF/services which doesn't work from module path
  moduleOptions {
    runOnClasspath = true
  }

  systemProperty 'junit.jupiter.execution.timeout.mode', 'disabled_on_debug'
}

task tckTest(type: Test) {
  useTestNG()
  include '**/tck/**'
  shouldRunAfter test
  scanForTestClasses false
  testLogging {
    events = ['failed']
  }

  if (System.getenv().GITHUB_ACTIONS) {
    systemProperties.TCK_TIMEOUT_MILLIS = 1_000
    systemProperties.TCK_NO_SIGNAL_TIMEOUT_MILLIS = 100
  }
}

check.dependsOn tckTest

// compileTestJava still compiles from the module path
addReads(compileTestJava, 'methanol.testutils')
addReads(compileTestJava, 'org.junit.jupiter.params')
