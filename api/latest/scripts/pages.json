[{"name":"abstract class MoshiAdapter : AbstractBodyAdapter","description":"com.github.mizosoft.methanol.adapter.moshi.MoshiAdapter","location":"methanol.adapter.moshi/com.github.mizosoft.methanol.adapter.moshi/-moshi-adapter/index.html","searchKeys":["MoshiAdapter","abstract class MoshiAdapter : AbstractBodyAdapter","com.github.mizosoft.methanol.adapter.moshi.MoshiAdapter"]},{"name":"fun Decoder(moshi: Moshi): BodyAdapter.Decoder","description":"com.github.mizosoft.methanol.adapter.moshi.MoshiAdapter.Companion.Decoder","location":"methanol.adapter.moshi/com.github.mizosoft.methanol.adapter.moshi/-moshi-adapter/-companion/-decoder.html","searchKeys":["Decoder","fun Decoder(moshi: Moshi): BodyAdapter.Decoder","com.github.mizosoft.methanol.adapter.moshi.MoshiAdapter.Companion.Decoder"]},{"name":"fun Decoder(moshi: Moshi, vararg mediaTypes: MediaType): BodyAdapter.Decoder","description":"com.github.mizosoft.methanol.adapter.moshi.MoshiAdapter.Companion.Decoder","location":"methanol.adapter.moshi/com.github.mizosoft.methanol.adapter.moshi/-moshi-adapter/-companion/-decoder.html","searchKeys":["Decoder","fun Decoder(moshi: Moshi, vararg mediaTypes: MediaType): BodyAdapter.Decoder","com.github.mizosoft.methanol.adapter.moshi.MoshiAdapter.Companion.Decoder"]},{"name":"fun Encoder(moshi: Moshi): BodyAdapter.Encoder","description":"com.github.mizosoft.methanol.adapter.moshi.MoshiAdapter.Companion.Encoder","location":"methanol.adapter.moshi/com.github.mizosoft.methanol.adapter.moshi/-moshi-adapter/-companion/-encoder.html","searchKeys":["Encoder","fun Encoder(moshi: Moshi): BodyAdapter.Encoder","com.github.mizosoft.methanol.adapter.moshi.MoshiAdapter.Companion.Encoder"]},{"name":"fun Encoder(moshi: Moshi, vararg mediaTypes: MediaType): BodyAdapter.Encoder","description":"com.github.mizosoft.methanol.adapter.moshi.MoshiAdapter.Companion.Encoder","location":"methanol.adapter.moshi/com.github.mizosoft.methanol.adapter.moshi/-moshi-adapter/-companion/-encoder.html","searchKeys":["Encoder","fun Encoder(moshi: Moshi, vararg mediaTypes: MediaType): BodyAdapter.Encoder","com.github.mizosoft.methanol.adapter.moshi.MoshiAdapter.Companion.Encoder"]},{"name":"object Companion","description":"com.github.mizosoft.methanol.adapter.moshi.MoshiAdapter.Companion","location":"methanol.adapter.moshi/com.github.mizosoft.methanol.adapter.moshi/-moshi-adapter/-companion/index.html","searchKeys":["Companion","object Companion","com.github.mizosoft.methanol.adapter.moshi.MoshiAdapter.Companion"]},{"name":"open class JavadocPlaceholder","description":"com.github.mizosoft.methanol.adapter.moshi.JavadocPlaceholder","location":"methanol.adapter.moshi/com.github.mizosoft.methanol.adapter.moshi/-javadoc-placeholder/index.html","searchKeys":["JavadocPlaceholder","open class JavadocPlaceholder","com.github.mizosoft.methanol.adapter.moshi.JavadocPlaceholder"]},{"name":"open override fun supportsType(typeRef: TypeRef<*>): Boolean","description":"com.github.mizosoft.methanol.adapter.moshi.MoshiAdapter.supportsType","location":"methanol.adapter.moshi/com.github.mizosoft.methanol.adapter.moshi/-moshi-adapter/supports-type.html","searchKeys":["supportsType","open override fun supportsType(typeRef: TypeRef<*>): Boolean","com.github.mizosoft.methanol.adapter.moshi.MoshiAdapter.supportsType"]},{"name":"constructor(description: String, fullName: String)","description":"com.github.mizosoft.methanol.samples.kotlin.GetPostJson.Repository.Repository","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-get-post-json/-repository/-repository.html","searchKeys":["Repository","constructor(description: String, fullName: String)","com.github.mizosoft.methanol.samples.kotlin.GetPostJson.Repository.Repository"]},{"name":"constructor(link: String)","description":"com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.Image.Image","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-multipart-and-form-uploads/-image/-image.html","searchKeys":["Image","constructor(link: String)","com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.Image.Image"]},{"name":"constructor(status: Int, success: Boolean, data: T?)","description":"com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.ImgurResponse.ImgurResponse","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-multipart-and-form-uploads/-imgur-response/-imgur-response.html","searchKeys":["ImgurResponse","constructor(status: Int, success: Boolean, data: T?)","com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.ImgurResponse.ImgurResponse"]},{"name":"constructor(text: String, context: String, mode: String)","description":"com.github.mizosoft.methanol.samples.kotlin.GetPostJson.Markdown.Markdown","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-get-post-json/-markdown/-markdown.html","searchKeys":["Markdown","constructor(text: String, context: String, mode: String)","com.github.mizosoft.methanol.samples.kotlin.GetPostJson.Markdown.Markdown"]},{"name":"data class Image(val link: String)","description":"com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.Image","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-multipart-and-form-uploads/-image/index.html","searchKeys":["Image","data class Image(val link: String)","com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.Image"]},{"name":"data class ImgurResponse<T>(val status: Int, val success: Boolean, val data: T?)","description":"com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.ImgurResponse","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-multipart-and-form-uploads/-imgur-response/index.html","searchKeys":["ImgurResponse","data class ImgurResponse<T>(val status: Int, val success: Boolean, val data: T?)","com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.ImgurResponse"]},{"name":"data class Markdown(val text: String, val context: String, val mode: String)","description":"com.github.mizosoft.methanol.samples.kotlin.GetPostJson.Markdown","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-get-post-json/-markdown/index.html","searchKeys":["Markdown","data class Markdown(val text: String, val context: String, val mode: String)","com.github.mizosoft.methanol.samples.kotlin.GetPostJson.Markdown"]},{"name":"data class Repository(val description: String, val fullName: String)","description":"com.github.mizosoft.methanol.samples.kotlin.GetPostJson.Repository","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-get-post-json/-repository/index.html","searchKeys":["Repository","data class Repository(val description: String, val fullName: String)","com.github.mizosoft.methanol.samples.kotlin.GetPostJson.Repository"]},{"name":"fun closeCache()","description":"com.github.mizosoft.methanol.samples.kotlin.CachingClient.closeCache","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-caching-client/close-cache.html","searchKeys":["closeCache","fun closeCache()","com.github.mizosoft.methanol.samples.kotlin.CachingClient.closeCache"]},{"name":"fun run()","description":"com.github.mizosoft.methanol.samples.kotlin.Coroutines.run","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-coroutines/run.html","searchKeys":["run","fun run()","com.github.mizosoft.methanol.samples.kotlin.Coroutines.run"]},{"name":"object CachingClient","description":"com.github.mizosoft.methanol.samples.kotlin.CachingClient","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-caching-client/index.html","searchKeys":["CachingClient","object CachingClient","com.github.mizosoft.methanol.samples.kotlin.CachingClient"]},{"name":"object Coroutines","description":"com.github.mizosoft.methanol.samples.kotlin.Coroutines","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-coroutines/index.html","searchKeys":["Coroutines","object Coroutines","com.github.mizosoft.methanol.samples.kotlin.Coroutines"]},{"name":"object GetPostJson","description":"com.github.mizosoft.methanol.samples.kotlin.GetPostJson","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-get-post-json/index.html","searchKeys":["GetPostJson","object GetPostJson","com.github.mizosoft.methanol.samples.kotlin.GetPostJson"]},{"name":"object GetPostString","description":"com.github.mizosoft.methanol.samples.kotlin.GetPostString","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-get-post-string/index.html","searchKeys":["GetPostString","object GetPostString","com.github.mizosoft.methanol.samples.kotlin.GetPostString"]},{"name":"object Interceptors","description":"com.github.mizosoft.methanol.samples.kotlin.Interceptors","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-interceptors/index.html","searchKeys":["Interceptors","object Interceptors","com.github.mizosoft.methanol.samples.kotlin.Interceptors"]},{"name":"object LoggingInterceptor : Interceptor","description":"com.github.mizosoft.methanol.samples.kotlin.Interceptors.LoggingInterceptor","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-interceptors/-logging-interceptor/index.html","searchKeys":["LoggingInterceptor","object LoggingInterceptor : Interceptor","com.github.mizosoft.methanol.samples.kotlin.Interceptors.LoggingInterceptor"]},{"name":"object MultipartAndFormUploads","description":"com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-multipart-and-form-uploads/index.html","searchKeys":["MultipartAndFormUploads","object MultipartAndFormUploads","com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads"]},{"name":"open suspend override fun <T> intercept(request: Request, chain: Interceptor.Chain<T>): Response<T>","description":"com.github.mizosoft.methanol.samples.kotlin.Interceptors.LoggingInterceptor.intercept","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-interceptors/-logging-interceptor/intercept.html","searchKeys":["intercept","open suspend override fun <T> intercept(request: Request, chain: Interceptor.Chain<T>): Response<T>","com.github.mizosoft.methanol.samples.kotlin.Interceptors.LoggingInterceptor.intercept"]},{"name":"suspend fun formUpload()","description":"com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.formUpload","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-multipart-and-form-uploads/form-upload.html","searchKeys":["formUpload","suspend fun formUpload()","com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.formUpload"]},{"name":"suspend fun main()","description":"com.github.mizosoft.methanol.samples.kotlin.main","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/main.html","searchKeys":["main","suspend fun main()","com.github.mizosoft.methanol.samples.kotlin.main"]},{"name":"suspend fun multipartUpload()","description":"com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.multipartUpload","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-multipart-and-form-uploads/multipart-upload.html","searchKeys":["multipartUpload","suspend fun multipartUpload()","com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.multipartUpload"]},{"name":"suspend fun run()","description":"com.github.mizosoft.methanol.samples.kotlin.CachingClient.run","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-caching-client/run.html","searchKeys":["run","suspend fun run()","com.github.mizosoft.methanol.samples.kotlin.CachingClient.run"]},{"name":"suspend fun run()","description":"com.github.mizosoft.methanol.samples.kotlin.Interceptors.run","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-interceptors/run.html","searchKeys":["run","suspend fun run()","com.github.mizosoft.methanol.samples.kotlin.Interceptors.run"]},{"name":"suspend fun runGet()","description":"com.github.mizosoft.methanol.samples.kotlin.GetPostJson.runGet","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-get-post-json/run-get.html","searchKeys":["runGet","suspend fun runGet()","com.github.mizosoft.methanol.samples.kotlin.GetPostJson.runGet"]},{"name":"suspend fun runGet()","description":"com.github.mizosoft.methanol.samples.kotlin.GetPostString.runGet","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-get-post-string/run-get.html","searchKeys":["runGet","suspend fun runGet()","com.github.mizosoft.methanol.samples.kotlin.GetPostString.runGet"]},{"name":"suspend fun runPost()","description":"com.github.mizosoft.methanol.samples.kotlin.GetPostJson.runPost","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-get-post-json/run-post.html","searchKeys":["runPost","suspend fun runPost()","com.github.mizosoft.methanol.samples.kotlin.GetPostJson.runPost"]},{"name":"suspend fun runPost()","description":"com.github.mizosoft.methanol.samples.kotlin.GetPostString.runPost","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-get-post-string/run-post.html","searchKeys":["runPost","suspend fun runPost()","com.github.mizosoft.methanol.samples.kotlin.GetPostString.runPost"]},{"name":"val client: Methanol","description":"com.github.mizosoft.methanol.samples.kotlin.CachingClient.client","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-caching-client/client.html","searchKeys":["client","val client: Methanol","com.github.mizosoft.methanol.samples.kotlin.CachingClient.client"]},{"name":"val client: Methanol","description":"com.github.mizosoft.methanol.samples.kotlin.Coroutines.client","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-coroutines/client.html","searchKeys":["client","val client: Methanol","com.github.mizosoft.methanol.samples.kotlin.Coroutines.client"]},{"name":"val client: Methanol","description":"com.github.mizosoft.methanol.samples.kotlin.GetPostJson.client","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-get-post-json/client.html","searchKeys":["client","val client: Methanol","com.github.mizosoft.methanol.samples.kotlin.GetPostJson.client"]},{"name":"val client: Methanol","description":"com.github.mizosoft.methanol.samples.kotlin.GetPostString.client","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-get-post-string/client.html","searchKeys":["client","val client: Methanol","com.github.mizosoft.methanol.samples.kotlin.GetPostString.client"]},{"name":"val client: Methanol","description":"com.github.mizosoft.methanol.samples.kotlin.Interceptors.client","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-interceptors/client.html","searchKeys":["client","val client: Methanol","com.github.mizosoft.methanol.samples.kotlin.Interceptors.client"]},{"name":"val client: Methanol","description":"com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.client","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-multipart-and-form-uploads/client.html","searchKeys":["client","val client: Methanol","com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.client"]},{"name":"val context: String","description":"com.github.mizosoft.methanol.samples.kotlin.GetPostJson.Markdown.context","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-get-post-json/-markdown/context.html","searchKeys":["context","val context: String","com.github.mizosoft.methanol.samples.kotlin.GetPostJson.Markdown.context"]},{"name":"val data: T?","description":"com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.ImgurResponse.data","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-multipart-and-form-uploads/-imgur-response/data.html","searchKeys":["data","val data: T?","com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.ImgurResponse.data"]},{"name":"val description: String","description":"com.github.mizosoft.methanol.samples.kotlin.GetPostJson.Repository.description","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-get-post-json/-repository/description.html","searchKeys":["description","val description: String","com.github.mizosoft.methanol.samples.kotlin.GetPostJson.Repository.description"]},{"name":"val fullName: String","description":"com.github.mizosoft.methanol.samples.kotlin.GetPostJson.Repository.fullName","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-get-post-json/-repository/full-name.html","searchKeys":["fullName","val fullName: String","com.github.mizosoft.methanol.samples.kotlin.GetPostJson.Repository.fullName"]},{"name":"val imgurClientId: String","description":"com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.imgurClientId","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-multipart-and-form-uploads/imgur-client-id.html","searchKeys":["imgurClientId","val imgurClientId: String","com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.imgurClientId"]},{"name":"val link: String","description":"com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.Image.link","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-multipart-and-form-uploads/-image/link.html","searchKeys":["link","val link: String","com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.Image.link"]},{"name":"val logger: System.Logger","description":"com.github.mizosoft.methanol.samples.kotlin.Interceptors.LoggingInterceptor.logger","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-interceptors/-logging-interceptor/logger.html","searchKeys":["logger","val logger: System.Logger","com.github.mizosoft.methanol.samples.kotlin.Interceptors.LoggingInterceptor.logger"]},{"name":"val mode: String","description":"com.github.mizosoft.methanol.samples.kotlin.GetPostJson.Markdown.mode","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-get-post-json/-markdown/mode.html","searchKeys":["mode","val mode: String","com.github.mizosoft.methanol.samples.kotlin.GetPostJson.Markdown.mode"]},{"name":"val requestIdGenerator: AtomicInteger","description":"com.github.mizosoft.methanol.samples.kotlin.Interceptors.LoggingInterceptor.requestIdGenerator","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-interceptors/-logging-interceptor/request-id-generator.html","searchKeys":["requestIdGenerator","val requestIdGenerator: AtomicInteger","com.github.mizosoft.methanol.samples.kotlin.Interceptors.LoggingInterceptor.requestIdGenerator"]},{"name":"val status: Int","description":"com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.ImgurResponse.status","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-multipart-and-form-uploads/-imgur-response/status.html","searchKeys":["status","val status: Int","com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.ImgurResponse.status"]},{"name":"val success: Boolean","description":"com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.ImgurResponse.success","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-multipart-and-form-uploads/-imgur-response/success.html","searchKeys":["success","val success: Boolean","com.github.mizosoft.methanol.samples.kotlin.MultipartAndFormUploads.ImgurResponse.success"]},{"name":"val text: String","description":"com.github.mizosoft.methanol.samples.kotlin.GetPostJson.Markdown.text","location":"kotlin/com.github.mizosoft.methanol.samples.kotlin/-get-post-json/-markdown/text.html","searchKeys":["text","val text: String","com.github.mizosoft.methanol.samples.kotlin.GetPostJson.Markdown.text"]},{"name":"abstract class KotlinAdapter : AbstractBodyAdapter","description":"com.github.mizosoft.methanol.kotlin.KotlinAdapter","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-kotlin-adapter/index.html","searchKeys":["KotlinAdapter","abstract class KotlinAdapter : AbstractBodyAdapter","com.github.mizosoft.methanol.kotlin.KotlinAdapter"]},{"name":"abstract fun <U> with(bodyHandler: <Error class: unknown class><T>, pushPromiseHandler: <Error class: unknown class><T>?): Interceptor.Chain<U>","description":"com.github.mizosoft.methanol.kotlin.Interceptor.Chain.with","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-interceptor/-chain/with.html","searchKeys":["with","abstract fun <U> with(bodyHandler: <Error class: unknown class><T>, pushPromiseHandler: <Error class: unknown class><T>?): Interceptor.Chain<U>","com.github.mizosoft.methanol.kotlin.Interceptor.Chain.with"]},{"name":"abstract fun DELETE()","description":"com.github.mizosoft.methanol.kotlin.RequestMethodSpec.DELETE","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-request-method-spec/-d-e-l-e-t-e.html","searchKeys":["DELETE","abstract fun DELETE()","com.github.mizosoft.methanol.kotlin.RequestMethodSpec.DELETE"]},{"name":"abstract fun GET()","description":"com.github.mizosoft.methanol.kotlin.RequestMethodSpec.GET","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-request-method-spec/-g-e-t.html","searchKeys":["GET","abstract fun GET()","com.github.mizosoft.methanol.kotlin.RequestMethodSpec.GET"]},{"name":"abstract fun PATCH(block: RequestBodySpec.() -> Unit)","description":"com.github.mizosoft.methanol.kotlin.RequestMethodSpec.PATCH","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-request-method-spec/-p-a-t-c-h.html","searchKeys":["PATCH","abstract fun PATCH(block: RequestBodySpec.() -> Unit)","com.github.mizosoft.methanol.kotlin.RequestMethodSpec.PATCH"]},{"name":"abstract fun POST(block: RequestBodySpec.() -> Unit)","description":"com.github.mizosoft.methanol.kotlin.RequestMethodSpec.POST","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-request-method-spec/-p-o-s-t.html","searchKeys":["POST","abstract fun POST(block: RequestBodySpec.() -> Unit)","com.github.mizosoft.methanol.kotlin.RequestMethodSpec.POST"]},{"name":"abstract fun PUT(block: RequestBodySpec.() -> Unit)","description":"com.github.mizosoft.methanol.kotlin.RequestMethodSpec.PUT","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-request-method-spec/-p-u-t.html","searchKeys":["PUT","abstract fun PUT(block: RequestBodySpec.() -> Unit)","com.github.mizosoft.methanol.kotlin.RequestMethodSpec.PUT"]},{"name":"abstract fun String.to(bodyPublisher: <Error class: unknown class>, filename: String)","description":"com.github.mizosoft.methanol.kotlin.MultipartBodySpec.to","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-multipart-body-spec/to.html","searchKeys":["to","abstract fun String.to(bodyPublisher: <Error class: unknown class>, filename: String)","com.github.mizosoft.methanol.kotlin.MultipartBodySpec.to"]},{"name":"abstract fun String.to(bodyPublisher: <Error class: unknown class>, filename: String, mediaType: MediaType)","description":"com.github.mizosoft.methanol.kotlin.MultipartBodySpec.to","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-multipart-body-spec/to.html","searchKeys":["to","abstract fun String.to(bodyPublisher: <Error class: unknown class>, filename: String, mediaType: MediaType)","com.github.mizosoft.methanol.kotlin.MultipartBodySpec.to"]},{"name":"abstract fun String.to(file: Path, mediaType: MediaType)","description":"com.github.mizosoft.methanol.kotlin.MultipartBodySpec.to","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-multipart-body-spec/to.html","searchKeys":["to","abstract fun String.to(file: Path, mediaType: MediaType)","com.github.mizosoft.methanol.kotlin.MultipartBodySpec.to"]},{"name":"abstract fun String.to(value: String, charset: Charset)","description":"com.github.mizosoft.methanol.kotlin.MultipartBodySpec.to","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-multipart-body-spec/to.html","searchKeys":["to","abstract fun String.to(value: String, charset: Charset)","com.github.mizosoft.methanol.kotlin.MultipartBodySpec.to"]},{"name":"abstract fun adapterCodec(adapterCodec: AdapterCodec)","description":"com.github.mizosoft.methanol.kotlin.BaseRequestSpec.adapterCodec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-base-request-spec/adapter-codec.html","searchKeys":["adapterCodec","abstract fun adapterCodec(adapterCodec: AdapterCodec)","com.github.mizosoft.methanol.kotlin.BaseRequestSpec.adapterCodec"]},{"name":"abstract fun adapterCodec(adapterCodec: AdapterCodec)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.adapterCodec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/adapter-codec.html","searchKeys":["adapterCodec","abstract fun adapterCodec(adapterCodec: AdapterCodec)","com.github.mizosoft.methanol.kotlin.ClientSpec.adapterCodec"]},{"name":"abstract fun adapterCodec(block: AdapterCodecSpec.() -> Unit)","description":"com.github.mizosoft.methanol.kotlin.BaseRequestSpec.adapterCodec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-base-request-spec/adapter-codec.html","searchKeys":["adapterCodec","abstract fun adapterCodec(block: AdapterCodecSpec.() -> Unit)","com.github.mizosoft.methanol.kotlin.BaseRequestSpec.adapterCodec"]},{"name":"abstract fun adapterCodec(block: AdapterCodecSpec.() -> Unit)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.adapterCodec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/adapter-codec.html","searchKeys":["adapterCodec","abstract fun adapterCodec(block: AdapterCodecSpec.() -> Unit)","com.github.mizosoft.methanol.kotlin.ClientSpec.adapterCodec"]},{"name":"abstract fun anyMaxStale()","description":"com.github.mizosoft.methanol.kotlin.CacheControlSpec.anyMaxStale","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-control-spec/any-max-stale.html","searchKeys":["anyMaxStale","abstract fun anyMaxStale()","com.github.mizosoft.methanol.kotlin.CacheControlSpec.anyMaxStale"]},{"name":"abstract fun authenticator(authenticator: Authenticator)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.authenticator","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/authenticator.html","searchKeys":["authenticator","abstract fun authenticator(authenticator: Authenticator)","com.github.mizosoft.methanol.kotlin.ClientSpec.authenticator"]},{"name":"abstract fun autoAcceptEncoding(autoAcceptEncoding: Boolean)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.autoAcceptEncoding","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/auto-accept-encoding.html","searchKeys":["autoAcceptEncoding","abstract fun autoAcceptEncoding(autoAcceptEncoding: Boolean)","com.github.mizosoft.methanol.kotlin.ClientSpec.autoAcceptEncoding"]},{"name":"abstract fun backendInterceptors(block: InterceptorsSpec.() -> Unit)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.backendInterceptors","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/backend-interceptors.html","searchKeys":["backendInterceptors","abstract fun backendInterceptors(block: InterceptorsSpec.() -> Unit)","com.github.mizosoft.methanol.kotlin.ClientSpec.backendInterceptors"]},{"name":"abstract fun baseUri(uri: String)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.baseUri","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/base-uri.html","searchKeys":["baseUri","abstract fun baseUri(uri: String)","com.github.mizosoft.methanol.kotlin.ClientSpec.baseUri"]},{"name":"abstract fun baseUri(uri: URI)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.baseUri","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/base-uri.html","searchKeys":["baseUri","abstract fun baseUri(uri: URI)","com.github.mizosoft.methanol.kotlin.ClientSpec.baseUri"]},{"name":"abstract fun basicDecoder()","description":"com.github.mizosoft.methanol.kotlin.AdapterCodecSpec.basicDecoder","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-adapter-codec-spec/basic-decoder.html","searchKeys":["basicDecoder","abstract fun basicDecoder()","com.github.mizosoft.methanol.kotlin.AdapterCodecSpec.basicDecoder"]},{"name":"abstract fun basicEncoder()","description":"com.github.mizosoft.methanol.kotlin.AdapterCodecSpec.basicEncoder","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-adapter-codec-spec/basic-encoder.html","searchKeys":["basicEncoder","abstract fun basicEncoder()","com.github.mizosoft.methanol.kotlin.AdapterCodecSpec.basicEncoder"]},{"name":"abstract fun body(bodyPublisher: <Error class: unknown class>)","description":"com.github.mizosoft.methanol.kotlin.RequestBodySpec.body","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-request-body-spec/body.html","searchKeys":["body","abstract fun body(bodyPublisher: <Error class: unknown class>)","com.github.mizosoft.methanol.kotlin.RequestBodySpec.body"]},{"name":"abstract fun body(payload: Any, mediaType: MediaType)","description":"com.github.mizosoft.methanol.kotlin.RequestBodySpec.body","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-request-body-spec/body.html","searchKeys":["body","abstract fun body(payload: Any, mediaType: MediaType)","com.github.mizosoft.methanol.kotlin.RequestBodySpec.body"]},{"name":"abstract fun boundary(boundary: String)","description":"com.github.mizosoft.methanol.kotlin.MultipartBodySpec.boundary","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-multipart-body-spec/boundary.html","searchKeys":["boundary","abstract fun boundary(boundary: String)","com.github.mizosoft.methanol.kotlin.MultipartBodySpec.boundary"]},{"name":"abstract fun cache(block: CacheSpec.() -> Unit)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.cache","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/cache.html","searchKeys":["cache","abstract fun cache(block: CacheSpec.() -> Unit)","com.github.mizosoft.methanol.kotlin.ClientSpec.cache"]},{"name":"abstract fun cache(cache: Cache)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.cache","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/cache.html","searchKeys":["cache","abstract fun cache(cache: Cache)","com.github.mizosoft.methanol.kotlin.ClientSpec.cache"]},{"name":"abstract fun cacheChain(block: CacheChainSpec.() -> Unit)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.cacheChain","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/cache-chain.html","searchKeys":["cacheChain","abstract fun cacheChain(block: CacheChainSpec.() -> Unit)","com.github.mizosoft.methanol.kotlin.ClientSpec.cacheChain"]},{"name":"abstract fun cacheChain(cacheChain: CacheChain)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.cacheChain","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/cache-chain.html","searchKeys":["cacheChain","abstract fun cacheChain(cacheChain: CacheChain)","com.github.mizosoft.methanol.kotlin.ClientSpec.cacheChain"]},{"name":"abstract fun cacheControl(block: CacheControlSpec.() -> Unit)","description":"com.github.mizosoft.methanol.kotlin.BaseRequestSpec.cacheControl","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-base-request-spec/cache-control.html","searchKeys":["cacheControl","abstract fun cacheControl(block: CacheControlSpec.() -> Unit)","com.github.mizosoft.methanol.kotlin.BaseRequestSpec.cacheControl"]},{"name":"abstract fun cacheControl(cacheControl: CacheControl)","description":"com.github.mizosoft.methanol.kotlin.BaseRequestSpec.cacheControl","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-base-request-spec/cache-control.html","searchKeys":["cacheControl","abstract fun cacheControl(cacheControl: CacheControl)","com.github.mizosoft.methanol.kotlin.BaseRequestSpec.cacheControl"]},{"name":"abstract fun connectTimeout(timeout: Duration)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.connectTimeout","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/connect-timeout.html","searchKeys":["connectTimeout","abstract fun connectTimeout(timeout: Duration)","com.github.mizosoft.methanol.kotlin.ClientSpec.connectTimeout"]},{"name":"abstract fun cookieHandler(cookieHandler: CookieHandler)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.cookieHandler","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/cookie-handler.html","searchKeys":["cookieHandler","abstract fun cookieHandler(cookieHandler: CookieHandler)","com.github.mizosoft.methanol.kotlin.ClientSpec.cookieHandler"]},{"name":"abstract fun defaultHeaders(block: HeadersSpec.() -> Unit)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.defaultHeaders","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/default-headers.html","searchKeys":["defaultHeaders","abstract fun defaultHeaders(block: HeadersSpec.() -> Unit)","com.github.mizosoft.methanol.kotlin.ClientSpec.defaultHeaders"]},{"name":"abstract fun executor(executor: Executor)","description":"com.github.mizosoft.methanol.kotlin.CacheSpec.executor","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-spec/executor.html","searchKeys":["executor","abstract fun executor(executor: Executor)","com.github.mizosoft.methanol.kotlin.CacheSpec.executor"]},{"name":"abstract fun executor(executor: Executor)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.executor","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/executor.html","searchKeys":["executor","abstract fun executor(executor: Executor)","com.github.mizosoft.methanol.kotlin.ClientSpec.executor"]},{"name":"abstract fun expectContinue(expectContinue: Boolean)","description":"com.github.mizosoft.methanol.kotlin.BaseRequestSpec.expectContinue","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-base-request-spec/expect-continue.html","searchKeys":["expectContinue","abstract fun expectContinue(expectContinue: Boolean)","com.github.mizosoft.methanol.kotlin.BaseRequestSpec.expectContinue"]},{"name":"abstract fun followRedirects(redirect: <Error class: unknown class>)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.followRedirects","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/follow-redirects.html","searchKeys":["followRedirects","abstract fun followRedirects(redirect: <Error class: unknown class>)","com.github.mizosoft.methanol.kotlin.ClientSpec.followRedirects"]},{"name":"abstract fun formBody(block: FormBodySpec.() -> Unit)","description":"com.github.mizosoft.methanol.kotlin.RequestBodySpec.formBody","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-request-body-spec/form-body.html","searchKeys":["formBody","abstract fun formBody(block: FormBodySpec.() -> Unit)","com.github.mizosoft.methanol.kotlin.RequestBodySpec.formBody"]},{"name":"abstract fun headers(block: HeadersSpec.() -> Unit)","description":"com.github.mizosoft.methanol.kotlin.BaseRequestSpec.headers","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-base-request-spec/headers.html","searchKeys":["headers","abstract fun headers(block: HeadersSpec.() -> Unit)","com.github.mizosoft.methanol.kotlin.BaseRequestSpec.headers"]},{"name":"abstract fun headersTimeout(timeout: Duration)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.headersTimeout","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/headers-timeout.html","searchKeys":["headersTimeout","abstract fun headersTimeout(timeout: Duration)","com.github.mizosoft.methanol.kotlin.ClientSpec.headersTimeout"]},{"name":"abstract fun hints(block: HintsSpec.() -> Unit)","description":"com.github.mizosoft.methanol.kotlin.BaseRequestSpec.hints","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-base-request-spec/hints.html","searchKeys":["hints","abstract fun hints(block: HintsSpec.() -> Unit)","com.github.mizosoft.methanol.kotlin.BaseRequestSpec.hints"]},{"name":"abstract fun inMemory(maxSizeBytes: Long)","description":"com.github.mizosoft.methanol.kotlin.CacheSpec.inMemory","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-spec/in-memory.html","searchKeys":["inMemory","abstract fun inMemory(maxSizeBytes: Long)","com.github.mizosoft.methanol.kotlin.CacheSpec.inMemory"]},{"name":"abstract fun interceptors(block: InterceptorsSpec.() -> Unit)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.interceptors","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/interceptors.html","searchKeys":["interceptors","abstract fun interceptors(block: InterceptorsSpec.() -> Unit)","com.github.mizosoft.methanol.kotlin.ClientSpec.interceptors"]},{"name":"abstract fun listener(listener: CacheListener)","description":"com.github.mizosoft.methanol.kotlin.CacheSpec.listener","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-spec/listener.html","searchKeys":["listener","abstract fun listener(listener: CacheListener)","com.github.mizosoft.methanol.kotlin.CacheSpec.listener"]},{"name":"abstract fun make(): T","description":"com.github.mizosoft.methanol.kotlin.FactorySpec.make","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-factory-spec/make.html","searchKeys":["make","abstract fun make(): T","com.github.mizosoft.methanol.kotlin.FactorySpec.make"]},{"name":"abstract fun maxAge(maxAge: Duration)","description":"com.github.mizosoft.methanol.kotlin.CacheControlSpec.maxAge","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-control-spec/max-age.html","searchKeys":["maxAge","abstract fun maxAge(maxAge: Duration)","com.github.mizosoft.methanol.kotlin.CacheControlSpec.maxAge"]},{"name":"abstract fun maxStale(maxStale: Duration)","description":"com.github.mizosoft.methanol.kotlin.CacheControlSpec.maxStale","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-control-spec/max-stale.html","searchKeys":["maxStale","abstract fun maxStale(maxStale: Duration)","com.github.mizosoft.methanol.kotlin.CacheControlSpec.maxStale"]},{"name":"abstract fun mediaType(mediaType: MediaType)","description":"com.github.mizosoft.methanol.kotlin.MultipartBodySpec.mediaType","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-multipart-body-spec/media-type.html","searchKeys":["mediaType","abstract fun mediaType(mediaType: MediaType)","com.github.mizosoft.methanol.kotlin.MultipartBodySpec.mediaType"]},{"name":"abstract fun method(method: String, block: RequestBodySpec.() -> Unit)","description":"com.github.mizosoft.methanol.kotlin.RequestMethodSpec.method","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-request-method-spec/method.html","searchKeys":["method","abstract fun method(method: String, block: RequestBodySpec.() -> Unit)","com.github.mizosoft.methanol.kotlin.RequestMethodSpec.method"]},{"name":"abstract fun minFresh(minFresh: Duration)","description":"com.github.mizosoft.methanol.kotlin.CacheControlSpec.minFresh","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-control-spec/min-fresh.html","searchKeys":["minFresh","abstract fun minFresh(minFresh: Duration)","com.github.mizosoft.methanol.kotlin.CacheControlSpec.minFresh"]},{"name":"abstract fun multipartBody(block: MultipartBodySpec.() -> Unit)","description":"com.github.mizosoft.methanol.kotlin.RequestBodySpec.multipartBody","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-request-body-spec/multipart-body.html","searchKeys":["multipartBody","abstract fun multipartBody(block: MultipartBodySpec.() -> Unit)","com.github.mizosoft.methanol.kotlin.RequestBodySpec.multipartBody"]},{"name":"abstract fun noCache()","description":"com.github.mizosoft.methanol.kotlin.CacheControlSpec.noCache","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-control-spec/no-cache.html","searchKeys":["noCache","abstract fun noCache()","com.github.mizosoft.methanol.kotlin.CacheControlSpec.noCache"]},{"name":"abstract fun noStore()","description":"com.github.mizosoft.methanol.kotlin.CacheControlSpec.noStore","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-control-spec/no-store.html","searchKeys":["noStore","abstract fun noStore()","com.github.mizosoft.methanol.kotlin.CacheControlSpec.noStore"]},{"name":"abstract fun noTransform()","description":"com.github.mizosoft.methanol.kotlin.CacheControlSpec.noTransform","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-control-spec/no-transform.html","searchKeys":["noTransform","abstract fun noTransform()","com.github.mizosoft.methanol.kotlin.CacheControlSpec.noTransform"]},{"name":"abstract fun on(storageExtension: StorageExtension)","description":"com.github.mizosoft.methanol.kotlin.CacheSpec.on","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-spec/on.html","searchKeys":["on","abstract fun on(storageExtension: StorageExtension)","com.github.mizosoft.methanol.kotlin.CacheSpec.on"]},{"name":"abstract fun onDisk(path: Path, maxSizeBytes: Long)","description":"com.github.mizosoft.methanol.kotlin.CacheSpec.onDisk","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-spec/on-disk.html","searchKeys":["onDisk","abstract fun onDisk(path: Path, maxSizeBytes: Long)","com.github.mizosoft.methanol.kotlin.CacheSpec.onDisk"]},{"name":"abstract fun onlyIfCached()","description":"com.github.mizosoft.methanol.kotlin.CacheControlSpec.onlyIfCached","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-control-spec/only-if-cached.html","searchKeys":["onlyIfCached","abstract fun onlyIfCached()","com.github.mizosoft.methanol.kotlin.CacheControlSpec.onlyIfCached"]},{"name":"abstract fun priority(priority: Int)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.priority","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/priority.html","searchKeys":["priority","abstract fun priority(priority: Int)","com.github.mizosoft.methanol.kotlin.ClientSpec.priority"]},{"name":"abstract fun proxy(proxySelector: ProxySelector)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.proxy","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/proxy.html","searchKeys":["proxy","abstract fun proxy(proxySelector: ProxySelector)","com.github.mizosoft.methanol.kotlin.ClientSpec.proxy"]},{"name":"abstract fun readTimeout(timeout: Duration)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.readTimeout","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/read-timeout.html","searchKeys":["readTimeout","abstract fun readTimeout(timeout: Duration)","com.github.mizosoft.methanol.kotlin.ClientSpec.readTimeout"]},{"name":"abstract fun requestTimeout(timeout: Duration)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.requestTimeout","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/request-timeout.html","searchKeys":["requestTimeout","abstract fun requestTimeout(timeout: Duration)","com.github.mizosoft.methanol.kotlin.ClientSpec.requestTimeout"]},{"name":"abstract fun sslContext(sslContext: SSLContext)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.sslContext","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/ssl-context.html","searchKeys":["sslContext","abstract fun sslContext(sslContext: SSLContext)","com.github.mizosoft.methanol.kotlin.ClientSpec.sslContext"]},{"name":"abstract fun sslParameters(sslParameters: SSLParameters)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.sslParameters","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/ssl-parameters.html","searchKeys":["sslParameters","abstract fun sslParameters(sslParameters: SSLParameters)","com.github.mizosoft.methanol.kotlin.ClientSpec.sslParameters"]},{"name":"abstract fun staleIfError(staleIfError: Duration)","description":"com.github.mizosoft.methanol.kotlin.CacheControlSpec.staleIfError","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-control-spec/stale-if-error.html","searchKeys":["staleIfError","abstract fun staleIfError(staleIfError: Duration)","com.github.mizosoft.methanol.kotlin.CacheControlSpec.staleIfError"]},{"name":"abstract fun synchronizeWrites(synchronizeWrites: Boolean = true)","description":"com.github.mizosoft.methanol.kotlin.CacheSpec.synchronizeWrites","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-spec/synchronize-writes.html","searchKeys":["synchronizeWrites","abstract fun synchronizeWrites(synchronizeWrites: Boolean = true)","com.github.mizosoft.methanol.kotlin.CacheSpec.synchronizeWrites"]},{"name":"abstract fun tags(block: TagsSpec.() -> Unit)","description":"com.github.mizosoft.methanol.kotlin.BaseRequestSpec.tags","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-base-request-spec/tags.html","searchKeys":["tags","abstract fun tags(block: TagsSpec.() -> Unit)","com.github.mizosoft.methanol.kotlin.BaseRequestSpec.tags"]},{"name":"abstract fun timeout(timeout: Duration)","description":"com.github.mizosoft.methanol.kotlin.BaseRequestSpec.timeout","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-base-request-spec/timeout.html","searchKeys":["timeout","abstract fun timeout(timeout: Duration)","com.github.mizosoft.methanol.kotlin.BaseRequestSpec.timeout"]},{"name":"abstract fun uri(uri: String)","description":"com.github.mizosoft.methanol.kotlin.BaseRequestSpec.uri","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-base-request-spec/uri.html","searchKeys":["uri","abstract fun uri(uri: String)","com.github.mizosoft.methanol.kotlin.BaseRequestSpec.uri"]},{"name":"abstract fun uri(uri: URI)","description":"com.github.mizosoft.methanol.kotlin.BaseRequestSpec.uri","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-base-request-spec/uri.html","searchKeys":["uri","abstract fun uri(uri: URI)","com.github.mizosoft.methanol.kotlin.BaseRequestSpec.uri"]},{"name":"abstract fun userAgent(userAgent: String)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.userAgent","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/user-agent.html","searchKeys":["userAgent","abstract fun userAgent(userAgent: String)","com.github.mizosoft.methanol.kotlin.ClientSpec.userAgent"]},{"name":"abstract fun version(version: <Error class: unknown class>)","description":"com.github.mizosoft.methanol.kotlin.BaseRequestSpec.version","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-base-request-spec/version.html","searchKeys":["version","abstract fun version(version: <Error class: unknown class>)","com.github.mizosoft.methanol.kotlin.BaseRequestSpec.version"]},{"name":"abstract fun version(version: <Error class: unknown class>)","description":"com.github.mizosoft.methanol.kotlin.ClientSpec.version","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/version.html","searchKeys":["version","abstract fun version(version: <Error class: unknown class>)","com.github.mizosoft.methanol.kotlin.ClientSpec.version"]},{"name":"abstract infix fun String.onlyTo(value: String)","description":"com.github.mizosoft.methanol.kotlin.HeadersSpec.onlyTo","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-headers-spec/only-to.html","searchKeys":["onlyTo","abstract infix fun String.onlyTo(value: String)","com.github.mizosoft.methanol.kotlin.HeadersSpec.onlyTo"]},{"name":"abstract infix fun String.onlyTo(values: List<String>)","description":"com.github.mizosoft.methanol.kotlin.HeadersSpec.onlyTo","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-headers-spec/only-to.html","searchKeys":["onlyTo","abstract infix fun String.onlyTo(values: List<String>)","com.github.mizosoft.methanol.kotlin.HeadersSpec.onlyTo"]},{"name":"abstract infix fun String.onlyToIfAbsent(value: String)","description":"com.github.mizosoft.methanol.kotlin.HeadersSpec.onlyToIfAbsent","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-headers-spec/only-to-if-absent.html","searchKeys":["onlyToIfAbsent","abstract infix fun String.onlyToIfAbsent(value: String)","com.github.mizosoft.methanol.kotlin.HeadersSpec.onlyToIfAbsent"]},{"name":"abstract infix fun String.onlyToIfAbsent(values: List<String>)","description":"com.github.mizosoft.methanol.kotlin.HeadersSpec.onlyToIfAbsent","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-headers-spec/only-to-if-absent.html","searchKeys":["onlyToIfAbsent","abstract infix fun String.onlyToIfAbsent(values: List<String>)","com.github.mizosoft.methanol.kotlin.HeadersSpec.onlyToIfAbsent"]},{"name":"abstract infix fun String.to(bodyPublisher: <Error class: unknown class>)","description":"com.github.mizosoft.methanol.kotlin.MultipartBodySpec.to","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-multipart-body-spec/to.html","searchKeys":["to","abstract infix fun String.to(bodyPublisher: <Error class: unknown class>)","com.github.mizosoft.methanol.kotlin.MultipartBodySpec.to"]},{"name":"abstract infix fun String.to(file: Path)","description":"com.github.mizosoft.methanol.kotlin.MultipartBodySpec.to","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-multipart-body-spec/to.html","searchKeys":["to","abstract infix fun String.to(file: Path)","com.github.mizosoft.methanol.kotlin.MultipartBodySpec.to"]},{"name":"abstract infix fun String.to(value: String)","description":"com.github.mizosoft.methanol.kotlin.CacheControlSpec.to","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-control-spec/to.html","searchKeys":["to","abstract infix fun String.to(value: String)","com.github.mizosoft.methanol.kotlin.CacheControlSpec.to"]},{"name":"abstract infix fun String.to(value: String)","description":"com.github.mizosoft.methanol.kotlin.MultipartBodySpec.to","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-multipart-body-spec/to.html","searchKeys":["to","abstract infix fun String.to(value: String)","com.github.mizosoft.methanol.kotlin.MultipartBodySpec.to"]},{"name":"abstract infix fun String.to(value: String)","description":"com.github.mizosoft.methanol.kotlin.StringNameMultiStringValueSpec.to","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-string-name-multi-string-value-spec/to.html","searchKeys":["to","abstract infix fun String.to(value: String)","com.github.mizosoft.methanol.kotlin.StringNameMultiStringValueSpec.to"]},{"name":"abstract infix fun String.to(values: List<String>)","description":"com.github.mizosoft.methanol.kotlin.StringNameMultiStringValueSpec.to","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-string-name-multi-string-value-spec/to.html","searchKeys":["to","abstract infix fun String.to(values: List<String>)","com.github.mizosoft.methanol.kotlin.StringNameMultiStringValueSpec.to"]},{"name":"abstract operator fun BodyAdapter.Decoder.unaryPlus()","description":"com.github.mizosoft.methanol.kotlin.AdapterCodecSpec.unaryPlus","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-adapter-codec-spec/unary-plus.html","searchKeys":["unaryPlus","abstract operator fun BodyAdapter.Decoder.unaryPlus()","com.github.mizosoft.methanol.kotlin.AdapterCodecSpec.unaryPlus"]},{"name":"abstract operator fun BodyAdapter.Encoder.unaryPlus()","description":"com.github.mizosoft.methanol.kotlin.AdapterCodecSpec.unaryPlus","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-adapter-codec-spec/unary-plus.html","searchKeys":["unaryPlus","abstract operator fun BodyAdapter.Encoder.unaryPlus()","com.github.mizosoft.methanol.kotlin.AdapterCodecSpec.unaryPlus"]},{"name":"abstract operator fun Cache.unaryPlus()","description":"com.github.mizosoft.methanol.kotlin.CacheChainSpec.unaryPlus","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-chain-spec/unary-plus.html","searchKeys":["unaryPlus","abstract operator fun Cache.unaryPlus()","com.github.mizosoft.methanol.kotlin.CacheChainSpec.unaryPlus"]},{"name":"abstract operator fun Interceptor.unaryPlus()","description":"com.github.mizosoft.methanol.kotlin.InterceptorsSpec.unaryPlus","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-interceptors-spec/unary-plus.html","searchKeys":["unaryPlus","abstract operator fun Interceptor.unaryPlus()","com.github.mizosoft.methanol.kotlin.InterceptorsSpec.unaryPlus"]},{"name":"abstract operator fun MultipartBodyPart.unaryPlus()","description":"com.github.mizosoft.methanol.kotlin.MultipartBodySpec.unaryPlus","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-multipart-body-spec/unary-plus.html","searchKeys":["unaryPlus","abstract operator fun MultipartBodyPart.unaryPlus()","com.github.mizosoft.methanol.kotlin.MultipartBodySpec.unaryPlus"]},{"name":"abstract operator fun String.unaryPlus()","description":"com.github.mizosoft.methanol.kotlin.CacheControlSpec.unaryPlus","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-control-spec/unary-plus.html","searchKeys":["unaryPlus","abstract operator fun String.unaryPlus()","com.github.mizosoft.methanol.kotlin.CacheControlSpec.unaryPlus"]},{"name":"abstract suspend fun <T> intercept(request: <Error class: unknown class>, chain: Interceptor.Chain<T>): <Error class: unknown class><T>","description":"com.github.mizosoft.methanol.kotlin.Interceptor.intercept","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-interceptor/intercept.html","searchKeys":["intercept","abstract suspend fun <T> intercept(request: <Error class: unknown class>, chain: Interceptor.Chain<T>): <Error class: unknown class><T>","com.github.mizosoft.methanol.kotlin.Interceptor.intercept"]},{"name":"abstract suspend fun forward(request: <Error class: unknown class>): <Error class: unknown class><T>","description":"com.github.mizosoft.methanol.kotlin.Interceptor.Chain.forward","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-interceptor/-chain/forward.html","searchKeys":["forward","abstract suspend fun forward(request: <Error class: unknown class>): <Error class: unknown class><T>","com.github.mizosoft.methanol.kotlin.Interceptor.Chain.forward"]},{"name":"abstract val bodyHandler: <Error class: unknown class><T>","description":"com.github.mizosoft.methanol.kotlin.Interceptor.Chain.bodyHandler","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-interceptor/-chain/body-handler.html","searchKeys":["bodyHandler","abstract val bodyHandler: <Error class: unknown class><T>","com.github.mizosoft.methanol.kotlin.Interceptor.Chain.bodyHandler"]},{"name":"abstract val pushPromiseHandler: <Error class: unknown class><T>?","description":"com.github.mizosoft.methanol.kotlin.Interceptor.Chain.pushPromiseHandler","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-interceptor/-chain/push-promise-handler.html","searchKeys":["pushPromiseHandler","abstract val pushPromiseHandler: <Error class: unknown class><T>?","com.github.mizosoft.methanol.kotlin.Interceptor.Chain.pushPromiseHandler"]},{"name":"annotation class Spec","description":"com.github.mizosoft.methanol.kotlin.Spec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-spec/index.html","searchKeys":["Spec","annotation class Spec","com.github.mizosoft.methanol.kotlin.Spec"]},{"name":"class HintsSpec(builder: BodyAdapter.Hints.Builder)","description":"com.github.mizosoft.methanol.kotlin.HintsSpec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-hints-spec/index.html","searchKeys":["HintsSpec","class HintsSpec(builder: BodyAdapter.Hints.Builder)","com.github.mizosoft.methanol.kotlin.HintsSpec"]},{"name":"class TagsSpec(builder: TaggableRequest.Builder)","description":"com.github.mizosoft.methanol.kotlin.TagsSpec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-tags-spec/index.html","searchKeys":["TagsSpec","class TagsSpec(builder: TaggableRequest.Builder)","com.github.mizosoft.methanol.kotlin.TagsSpec"]},{"name":"constructor(builder: BodyAdapter.Hints.Builder)","description":"com.github.mizosoft.methanol.kotlin.HintsSpec.HintsSpec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-hints-spec/-hints-spec.html","searchKeys":["HintsSpec","constructor(builder: BodyAdapter.Hints.Builder)","com.github.mizosoft.methanol.kotlin.HintsSpec.HintsSpec"]},{"name":"constructor(builder: TaggableRequest.Builder)","description":"com.github.mizosoft.methanol.kotlin.TagsSpec.TagsSpec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-tags-spec/-tags-spec.html","searchKeys":["TagsSpec","constructor(builder: TaggableRequest.Builder)","com.github.mizosoft.methanol.kotlin.TagsSpec.TagsSpec"]},{"name":"fun <Error class: unknown class>.toHttpString(valueToString: (String, String) -> String? = { name, value -> value }): <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.toHttpString","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/to-http-string.html","searchKeys":["toHttpString","fun <Error class: unknown class>.toHttpString(valueToString: (String, String) -> String? = { name, value -> value }): <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.toHttpString"]},{"name":"fun <Error class: unknown class>.toTaggableRequest(): TaggableRequest","description":"com.github.mizosoft.methanol.kotlin.toTaggableRequest","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/to-taggable-request.html","searchKeys":["toTaggableRequest","fun <Error class: unknown class>.toTaggableRequest(): TaggableRequest","com.github.mizosoft.methanol.kotlin.toTaggableRequest"]},{"name":"fun <Error class: unknown class>.withMediaType(mediaType: MediaType): MimeBodyPublisher","description":"com.github.mizosoft.methanol.kotlin.withMediaType","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/with-media-type.html","searchKeys":["withMediaType","fun <Error class: unknown class>.withMediaType(mediaType: MediaType): MimeBodyPublisher","com.github.mizosoft.methanol.kotlin.withMediaType"]},{"name":"fun <Error class: unknown class><T>.isClientError(): <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.isClientError","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/is-client-error.html","searchKeys":["isClientError","fun <Error class: unknown class><T>.isClientError(): <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.isClientError"]},{"name":"fun <Error class: unknown class><T>.isInformational(): <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.isInformational","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/is-informational.html","searchKeys":["isInformational","fun <Error class: unknown class><T>.isInformational(): <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.isInformational"]},{"name":"fun <Error class: unknown class><T>.isRedirection(): <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.isRedirection","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/is-redirection.html","searchKeys":["isRedirection","fun <Error class: unknown class><T>.isRedirection(): <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.isRedirection"]},{"name":"fun <Error class: unknown class><T>.isServerError(): <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.isServerError","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/is-server-error.html","searchKeys":["isServerError","fun <Error class: unknown class><T>.isServerError(): <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.isServerError"]},{"name":"fun <Error class: unknown class><T>.isSuccessful(): <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.isSuccessful","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/is-successful.html","searchKeys":["isSuccessful","fun <Error class: unknown class><T>.isSuccessful(): <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.isSuccessful"]},{"name":"fun AdapterCodec(block: AdapterCodecSpec.() -> Unit): AdapterCodec","description":"com.github.mizosoft.methanol.kotlin.AdapterCodec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-adapter-codec.html","searchKeys":["AdapterCodec","fun AdapterCodec(block: AdapterCodecSpec.() -> Unit): AdapterCodec","com.github.mizosoft.methanol.kotlin.AdapterCodec"]},{"name":"fun Cache(block: CacheSpec.() -> Unit): HttpCache","description":"com.github.mizosoft.methanol.kotlin.Cache","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache.html","searchKeys":["Cache","fun Cache(block: CacheSpec.() -> Unit): HttpCache","com.github.mizosoft.methanol.kotlin.Cache"]},{"name":"fun CacheChain(block: CacheChainSpec.() -> Unit): List<Cache>","description":"com.github.mizosoft.methanol.kotlin.CacheChain","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-chain.html","searchKeys":["CacheChain","fun CacheChain(block: CacheChainSpec.() -> Unit): List<Cache>","com.github.mizosoft.methanol.kotlin.CacheChain"]},{"name":"fun CacheChain.close()","description":"com.github.mizosoft.methanol.kotlin.close","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/close.html","searchKeys":["close","fun CacheChain.close()","com.github.mizosoft.methanol.kotlin.close"]},{"name":"fun CacheChain.closeable(): AutoCloseable","description":"com.github.mizosoft.methanol.kotlin.closeable","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/closeable.html","searchKeys":["closeable","fun CacheChain.closeable(): AutoCloseable","com.github.mizosoft.methanol.kotlin.closeable"]},{"name":"fun CacheControl(block: CacheControlSpec.() -> Unit): CacheControl","description":"com.github.mizosoft.methanol.kotlin.CacheControl","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-control.html","searchKeys":["CacheControl","fun CacheControl(block: CacheControlSpec.() -> Unit): CacheControl","com.github.mizosoft.methanol.kotlin.CacheControl"]},{"name":"fun Client(block: ClientSpec.() -> Unit): Methanol","description":"com.github.mizosoft.methanol.kotlin.Client","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client.html","searchKeys":["Client","fun Client(block: ClientSpec.() -> Unit): Methanol","com.github.mizosoft.methanol.kotlin.Client"]},{"name":"fun Decoder(format: SerialFormat, vararg mediaTypes: MediaType): BodyAdapter.Decoder","description":"com.github.mizosoft.methanol.kotlin.KotlinAdapter.Companion.Decoder","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-kotlin-adapter/-companion/-decoder.html","searchKeys":["Decoder","fun Decoder(format: SerialFormat, vararg mediaTypes: MediaType): BodyAdapter.Decoder","com.github.mizosoft.methanol.kotlin.KotlinAdapter.Companion.Decoder"]},{"name":"fun Encoder(format: SerialFormat, vararg mediaTypes: MediaType): BodyAdapter.Encoder","description":"com.github.mizosoft.methanol.kotlin.KotlinAdapter.Companion.Encoder","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-kotlin-adapter/-companion/-encoder.html","searchKeys":["Encoder","fun Encoder(format: SerialFormat, vararg mediaTypes: MediaType): BodyAdapter.Encoder","com.github.mizosoft.methanol.kotlin.KotlinAdapter.Companion.Encoder"]},{"name":"fun FormBody(block: FormBodySpec.() -> Unit): FormBodyPublisher","description":"com.github.mizosoft.methanol.kotlin.FormBody","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-form-body.html","searchKeys":["FormBody","fun FormBody(block: FormBodySpec.() -> Unit): FormBodyPublisher","com.github.mizosoft.methanol.kotlin.FormBody"]},{"name":"fun Headers(block: HeadersSpec.() -> Unit): <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.Headers","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-headers.html","searchKeys":["Headers","fun Headers(block: HeadersSpec.() -> Unit): <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.Headers"]},{"name":"fun Headers(headers: <Error class: unknown class>, block: HeadersSpec.() -> Unit): <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.Headers","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-headers.html","searchKeys":["Headers","fun Headers(headers: <Error class: unknown class>, block: HeadersSpec.() -> Unit): <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.Headers"]},{"name":"fun List<String>.toCacheControl(): CacheControl","description":"com.github.mizosoft.methanol.kotlin.toCacheControl","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/to-cache-control.html","searchKeys":["toCacheControl","fun List<String>.toCacheControl(): CacheControl","com.github.mizosoft.methanol.kotlin.toCacheControl"]},{"name":"fun MultipartBody(block: MultipartBodySpec.() -> Unit): MultipartBodyPublisher","description":"com.github.mizosoft.methanol.kotlin.MultipartBody","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-multipart-body.html","searchKeys":["MultipartBody","fun MultipartBody(block: MultipartBodySpec.() -> Unit): MultipartBodyPublisher","com.github.mizosoft.methanol.kotlin.MultipartBody"]},{"name":"fun MultipartBodyPart(bodyPublisher: <Error class: unknown class>, block: HeadersSpec.() -> Unit): MultipartBodyPart","description":"com.github.mizosoft.methanol.kotlin.MultipartBodyPart","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-multipart-body-part.html","searchKeys":["MultipartBodyPart","fun MultipartBodyPart(bodyPublisher: <Error class: unknown class>, block: HeadersSpec.() -> Unit): MultipartBodyPart","com.github.mizosoft.methanol.kotlin.MultipartBodyPart"]},{"name":"fun Request(block: RequestSpec.() -> Unit): TaggableRequest","description":"com.github.mizosoft.methanol.kotlin.Request","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-request.html","searchKeys":["Request","fun Request(block: RequestSpec.() -> Unit): TaggableRequest","com.github.mizosoft.methanol.kotlin.Request"]},{"name":"fun Request(request: <Error class: unknown class>, block: RequestSpec.() -> Unit): TaggableRequest","description":"com.github.mizosoft.methanol.kotlin.Request","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-request.html","searchKeys":["Request","fun Request(request: <Error class: unknown class>, block: RequestSpec.() -> Unit): TaggableRequest","com.github.mizosoft.methanol.kotlin.Request"]},{"name":"fun String.toCacheControl(): CacheControl","description":"com.github.mizosoft.methanol.kotlin.toCacheControl","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/to-cache-control.html","searchKeys":["toCacheControl","fun String.toCacheControl(): CacheControl","com.github.mizosoft.methanol.kotlin.toCacheControl"]},{"name":"fun String.toMediaType(): MediaType","description":"com.github.mizosoft.methanol.kotlin.toMediaType","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/to-media-type.html","searchKeys":["toMediaType","fun String.toMediaType(): MediaType","com.github.mizosoft.methanol.kotlin.toMediaType"]},{"name":"inline fun <T : Any> <Error class: unknown class>.tag(): T?","description":"com.github.mizosoft.methanol.kotlin.tag","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/tag.html","searchKeys":["tag","inline fun <T : Any> <Error class: unknown class>.tag(): T?","com.github.mizosoft.methanol.kotlin.tag"]},{"name":"inline fun <T> AdapterCodec.handlerOf(hints: BodyAdapter.Hints = Hints.empty()): <Error class: unknown class><T>","description":"com.github.mizosoft.methanol.kotlin.handlerOf","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/handler-of.html","searchKeys":["handlerOf","inline fun <T> AdapterCodec.handlerOf(hints: BodyAdapter.Hints = Hints.empty()): <Error class: unknown class><T>","com.github.mizosoft.methanol.kotlin.handlerOf"]},{"name":"inline fun <T> AdapterCodec.subscriberOf(hints: BodyAdapter.Hints = Hints.empty()): <Error class: unknown class><T>","description":"com.github.mizosoft.methanol.kotlin.subscriberOf","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/subscriber-of.html","searchKeys":["subscriberOf","inline fun <T> AdapterCodec.subscriberOf(hints: BodyAdapter.Hints = Hints.empty()): <Error class: unknown class><T>","com.github.mizosoft.methanol.kotlin.subscriberOf"]},{"name":"inline fun <T> RequestBodySpec.body(payload: T, mediaType: MediaType)","description":"com.github.mizosoft.methanol.kotlin.body","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/body.html","searchKeys":["body","inline fun <T> RequestBodySpec.body(payload: T, mediaType: MediaType)","com.github.mizosoft.methanol.kotlin.body"]},{"name":"inline fun <T> TypeRef(): TypeRef<T>","description":"com.github.mizosoft.methanol.kotlin.TypeRef","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-type-ref.html","searchKeys":["TypeRef","inline fun <T> TypeRef(): TypeRef<T>","com.github.mizosoft.methanol.kotlin.TypeRef"]},{"name":"inline operator fun <T> T.unaryPlus()","description":"com.github.mizosoft.methanol.kotlin.HintsSpec.unaryPlus","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-hints-spec/unary-plus.html","searchKeys":["unaryPlus","inline operator fun <T> T.unaryPlus()","com.github.mizosoft.methanol.kotlin.HintsSpec.unaryPlus"]},{"name":"inline operator fun <T> T.unaryPlus()","description":"com.github.mizosoft.methanol.kotlin.TagsSpec.unaryPlus","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-tags-spec/unary-plus.html","searchKeys":["unaryPlus","inline operator fun <T> T.unaryPlus()","com.github.mizosoft.methanol.kotlin.TagsSpec.unaryPlus"]},{"name":"inline suspend fun <T> Client.delete(uri: String, noinline block: BaseRequestSpec.() -> Unit = {}): <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.delete","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/delete.html","searchKeys":["delete","inline suspend fun <T> Client.delete(uri: String, noinline block: BaseRequestSpec.() -> Unit = {}): <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.delete"]},{"name":"inline suspend fun <T> Client.fetch(request: <Error class: unknown class>): <Error class: unknown class><T>","description":"com.github.mizosoft.methanol.kotlin.fetch","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/fetch.html","searchKeys":["fetch","inline suspend fun <T> Client.fetch(request: <Error class: unknown class>): <Error class: unknown class><T>","com.github.mizosoft.methanol.kotlin.fetch"]},{"name":"inline suspend fun <T> Client.fetch(uri: String, noinline block: RequestSpec.() -> Unit = {}): <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.fetch","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/fetch.html","searchKeys":["fetch","inline suspend fun <T> Client.fetch(uri: String, noinline block: RequestSpec.() -> Unit = {}): <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.fetch"]},{"name":"inline suspend fun <T> Client.get(uri: String, noinline block: BaseRequestSpec.() -> Unit = {}): <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.get","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/get.html","searchKeys":["get","inline suspend fun <T> Client.get(uri: String, noinline block: BaseRequestSpec.() -> Unit = {}): <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.get"]},{"name":"inline suspend fun <T> Client.patch(uri: String, noinline block: RequestWithKnownMethodSpec.() -> Unit = {}): <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.patch","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/patch.html","searchKeys":["patch","inline suspend fun <T> Client.patch(uri: String, noinline block: RequestWithKnownMethodSpec.() -> Unit = {}): <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.patch"]},{"name":"inline suspend fun <T> Client.post(uri: String, noinline block: RequestWithKnownMethodSpec.() -> Unit = {}): <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.post","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/post.html","searchKeys":["post","inline suspend fun <T> Client.post(uri: String, noinline block: RequestWithKnownMethodSpec.() -> Unit = {}): <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.post"]},{"name":"inline suspend fun <T> Client.put(uri: String, noinline block: RequestWithKnownMethodSpec.() -> Unit = {}): <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.put","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/put.html","searchKeys":["put","inline suspend fun <T> Client.put(uri: String, noinline block: RequestWithKnownMethodSpec.() -> Unit = {}): <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.put"]},{"name":"inline suspend fun <T> ResponsePayload.to(): T","description":"com.github.mizosoft.methanol.kotlin.to","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/to.html","searchKeys":["to","inline suspend fun <T> ResponsePayload.to(): T","com.github.mizosoft.methanol.kotlin.to"]},{"name":"interface AdapterCodecSpec","description":"com.github.mizosoft.methanol.kotlin.AdapterCodecSpec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-adapter-codec-spec/index.html","searchKeys":["AdapterCodecSpec","interface AdapterCodecSpec","com.github.mizosoft.methanol.kotlin.AdapterCodecSpec"]},{"name":"interface BaseRequestSpec","description":"com.github.mizosoft.methanol.kotlin.BaseRequestSpec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-base-request-spec/index.html","searchKeys":["BaseRequestSpec","interface BaseRequestSpec","com.github.mizosoft.methanol.kotlin.BaseRequestSpec"]},{"name":"interface CacheChainSpec","description":"com.github.mizosoft.methanol.kotlin.CacheChainSpec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-chain-spec/index.html","searchKeys":["CacheChainSpec","interface CacheChainSpec","com.github.mizosoft.methanol.kotlin.CacheChainSpec"]},{"name":"interface CacheControlSpec","description":"com.github.mizosoft.methanol.kotlin.CacheControlSpec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-control-spec/index.html","searchKeys":["CacheControlSpec","interface CacheControlSpec","com.github.mizosoft.methanol.kotlin.CacheControlSpec"]},{"name":"interface CacheSpec","description":"com.github.mizosoft.methanol.kotlin.CacheSpec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-spec/index.html","searchKeys":["CacheSpec","interface CacheSpec","com.github.mizosoft.methanol.kotlin.CacheSpec"]},{"name":"interface Chain<T>","description":"com.github.mizosoft.methanol.kotlin.Interceptor.Chain","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-interceptor/-chain/index.html","searchKeys":["Chain","interface Chain<T>","com.github.mizosoft.methanol.kotlin.Interceptor.Chain"]},{"name":"interface ClientSpec","description":"com.github.mizosoft.methanol.kotlin.ClientSpec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client-spec/index.html","searchKeys":["ClientSpec","interface ClientSpec","com.github.mizosoft.methanol.kotlin.ClientSpec"]},{"name":"interface FactorySpec<T>","description":"com.github.mizosoft.methanol.kotlin.FactorySpec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-factory-spec/index.html","searchKeys":["FactorySpec","interface FactorySpec<T>","com.github.mizosoft.methanol.kotlin.FactorySpec"]},{"name":"interface FormBodySpec : StringNameMultiStringValueSpec","description":"com.github.mizosoft.methanol.kotlin.FormBodySpec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-form-body-spec/index.html","searchKeys":["FormBodySpec","interface FormBodySpec : StringNameMultiStringValueSpec","com.github.mizosoft.methanol.kotlin.FormBodySpec"]},{"name":"interface HeadersSpec : StringNameMultiStringValueSpec","description":"com.github.mizosoft.methanol.kotlin.HeadersSpec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-headers-spec/index.html","searchKeys":["HeadersSpec","interface HeadersSpec : StringNameMultiStringValueSpec","com.github.mizosoft.methanol.kotlin.HeadersSpec"]},{"name":"interface Interceptor","description":"com.github.mizosoft.methanol.kotlin.Interceptor","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-interceptor/index.html","searchKeys":["Interceptor","interface Interceptor","com.github.mizosoft.methanol.kotlin.Interceptor"]},{"name":"interface InterceptorsSpec","description":"com.github.mizosoft.methanol.kotlin.InterceptorsSpec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-interceptors-spec/index.html","searchKeys":["InterceptorsSpec","interface InterceptorsSpec","com.github.mizosoft.methanol.kotlin.InterceptorsSpec"]},{"name":"interface MultipartBodySpec : PairCreationDisablingSpec","description":"com.github.mizosoft.methanol.kotlin.MultipartBodySpec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-multipart-body-spec/index.html","searchKeys":["MultipartBodySpec","interface MultipartBodySpec : PairCreationDisablingSpec","com.github.mizosoft.methanol.kotlin.MultipartBodySpec"]},{"name":"interface PairCreationDisablingSpec","description":"com.github.mizosoft.methanol.kotlin.PairCreationDisablingSpec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-pair-creation-disabling-spec/index.html","searchKeys":["PairCreationDisablingSpec","interface PairCreationDisablingSpec","com.github.mizosoft.methanol.kotlin.PairCreationDisablingSpec"]},{"name":"interface RequestBodySpec","description":"com.github.mizosoft.methanol.kotlin.RequestBodySpec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-request-body-spec/index.html","searchKeys":["RequestBodySpec","interface RequestBodySpec","com.github.mizosoft.methanol.kotlin.RequestBodySpec"]},{"name":"interface RequestMethodSpec","description":"com.github.mizosoft.methanol.kotlin.RequestMethodSpec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-request-method-spec/index.html","searchKeys":["RequestMethodSpec","interface RequestMethodSpec","com.github.mizosoft.methanol.kotlin.RequestMethodSpec"]},{"name":"interface RequestSpec : BaseRequestSpec, RequestMethodSpec","description":"com.github.mizosoft.methanol.kotlin.RequestSpec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-request-spec/index.html","searchKeys":["RequestSpec","interface RequestSpec : BaseRequestSpec, RequestMethodSpec","com.github.mizosoft.methanol.kotlin.RequestSpec"]},{"name":"interface RequestWithKnownMethodSpec : BaseRequestSpec, RequestBodySpec","description":"com.github.mizosoft.methanol.kotlin.RequestWithKnownMethodSpec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-request-with-known-method-spec/index.html","searchKeys":["RequestWithKnownMethodSpec","interface RequestWithKnownMethodSpec : BaseRequestSpec, RequestBodySpec","com.github.mizosoft.methanol.kotlin.RequestWithKnownMethodSpec"]},{"name":"interface StringNameMultiStringValueSpec : PairCreationDisablingSpec","description":"com.github.mizosoft.methanol.kotlin.StringNameMultiStringValueSpec","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-string-name-multi-string-value-spec/index.html","searchKeys":["StringNameMultiStringValueSpec","interface StringNameMultiStringValueSpec : PairCreationDisablingSpec","com.github.mizosoft.methanol.kotlin.StringNameMultiStringValueSpec"]},{"name":"object Companion","description":"com.github.mizosoft.methanol.kotlin.KotlinAdapter.Companion","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-kotlin-adapter/-companion/index.html","searchKeys":["Companion","object Companion","com.github.mizosoft.methanol.kotlin.KotlinAdapter.Companion"]},{"name":"open class JavadocPlaceholder","description":"com.github.mizosoft.methanol.kotlin.JavadocPlaceholder","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-javadoc-placeholder/index.html","searchKeys":["JavadocPlaceholder","open class JavadocPlaceholder","com.github.mizosoft.methanol.kotlin.JavadocPlaceholder"]},{"name":"open fun basic()","description":"com.github.mizosoft.methanol.kotlin.AdapterCodecSpec.basic","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-adapter-codec-spec/basic.html","searchKeys":["basic","open fun basic()","com.github.mizosoft.methanol.kotlin.AdapterCodecSpec.basic"]},{"name":"open infix fun <A, B> A.to(that: B): Pair<A, B>","description":"com.github.mizosoft.methanol.kotlin.PairCreationDisablingSpec.to","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-pair-creation-disabling-spec/to.html","searchKeys":["to","open infix fun <A, B> A.to(that: B): Pair<A, B>","com.github.mizosoft.methanol.kotlin.PairCreationDisablingSpec.to"]},{"name":"open override fun supportsType(typeRef: TypeRef<*>): Boolean","description":"com.github.mizosoft.methanol.kotlin.KotlinAdapter.supportsType","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-kotlin-adapter/supports-type.html","searchKeys":["supportsType","open override fun supportsType(typeRef: TypeRef<*>): Boolean","com.github.mizosoft.methanol.kotlin.KotlinAdapter.supportsType"]},{"name":"operator fun <Error class: unknown class>.get(name: String): List<String>","description":"com.github.mizosoft.methanol.kotlin.get","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/get.html","searchKeys":["get","operator fun <Error class: unknown class>.get(name: String): List<String>","com.github.mizosoft.methanol.kotlin.get"]},{"name":"suspend fun <T> Client.delete(uri: String, bodyHandler: <Error class: unknown class><T>, block: BaseRequestSpec.() -> Unit = {}): <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.delete","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/delete.html","searchKeys":["delete","suspend fun <T> Client.delete(uri: String, bodyHandler: <Error class: unknown class><T>, block: BaseRequestSpec.() -> Unit = {}): <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.delete"]},{"name":"suspend fun <T> Client.fetch(uri: String, bodyHandler: <Error class: unknown class><T>, block: RequestSpec.() -> Unit = {}): <Error class: unknown class><T>","description":"com.github.mizosoft.methanol.kotlin.fetch","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/fetch.html","searchKeys":["fetch","suspend fun <T> Client.fetch(uri: String, bodyHandler: <Error class: unknown class><T>, block: RequestSpec.() -> Unit = {}): <Error class: unknown class><T>","com.github.mizosoft.methanol.kotlin.fetch"]},{"name":"suspend fun <T> Client.get(uri: String, bodyHandler: <Error class: unknown class><T>, block: BaseRequestSpec.() -> Unit = {}): <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.get","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/get.html","searchKeys":["get","suspend fun <T> Client.get(uri: String, bodyHandler: <Error class: unknown class><T>, block: BaseRequestSpec.() -> Unit = {}): <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.get"]},{"name":"suspend fun <T> Client.patch(uri: String, bodyHandler: <Error class: unknown class><T>, block: RequestWithKnownMethodSpec.() -> Unit = {}): <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.patch","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/patch.html","searchKeys":["patch","suspend fun <T> Client.patch(uri: String, bodyHandler: <Error class: unknown class><T>, block: RequestWithKnownMethodSpec.() -> Unit = {}): <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.patch"]},{"name":"suspend fun <T> Client.post(uri: String, bodyHandler: <Error class: unknown class><T>, block: RequestWithKnownMethodSpec.() -> Unit = {}): <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.post","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/post.html","searchKeys":["post","suspend fun <T> Client.post(uri: String, bodyHandler: <Error class: unknown class><T>, block: RequestWithKnownMethodSpec.() -> Unit = {}): <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.post"]},{"name":"suspend fun <T> Client.put(uri: String, bodyHandler: <Error class: unknown class><T>, block: RequestWithKnownMethodSpec.() -> Unit = {}): <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.put","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/put.html","searchKeys":["put","suspend fun <T> Client.put(uri: String, bodyHandler: <Error class: unknown class><T>, block: RequestWithKnownMethodSpec.() -> Unit = {}): <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.put"]},{"name":"suspend fun <T> ResponsePayload.with(bodyHandler: <Error class: unknown class><T>): T","description":"com.github.mizosoft.methanol.kotlin.with","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/with.html","searchKeys":["with","suspend fun <T> ResponsePayload.with(bodyHandler: <Error class: unknown class><T>): T","com.github.mizosoft.methanol.kotlin.with"]},{"name":"typealias BodyHandler<T> = <Error class: unknown class><T>","description":"com.github.mizosoft.methanol.kotlin.BodyHandler","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-body-handler/index.html","searchKeys":["BodyHandler","typealias BodyHandler<T> = <Error class: unknown class><T>","com.github.mizosoft.methanol.kotlin.BodyHandler"]},{"name":"typealias BodyHandlers = <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.BodyHandlers","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-body-handlers/index.html","searchKeys":["BodyHandlers","typealias BodyHandlers = <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.BodyHandlers"]},{"name":"typealias BodyPublisher = <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.BodyPublisher","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-body-publisher/index.html","searchKeys":["BodyPublisher","typealias BodyPublisher = <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.BodyPublisher"]},{"name":"typealias BodyPublishers = <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.BodyPublishers","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-body-publishers/index.html","searchKeys":["BodyPublishers","typealias BodyPublishers = <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.BodyPublishers"]},{"name":"typealias BodySubscriber<T> = <Error class: unknown class><T>","description":"com.github.mizosoft.methanol.kotlin.BodySubscriber","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-body-subscriber/index.html","searchKeys":["BodySubscriber","typealias BodySubscriber<T> = <Error class: unknown class><T>","com.github.mizosoft.methanol.kotlin.BodySubscriber"]},{"name":"typealias BodySubscribers = <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.BodySubscribers","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-body-subscribers/index.html","searchKeys":["BodySubscribers","typealias BodySubscribers = <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.BodySubscribers"]},{"name":"typealias Cache = HttpCache","description":"com.github.mizosoft.methanol.kotlin.Cache","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache/index.html","searchKeys":["Cache","typealias Cache = HttpCache","com.github.mizosoft.methanol.kotlin.Cache"]},{"name":"typealias CacheChain = List<Cache>","description":"com.github.mizosoft.methanol.kotlin.CacheChain","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-chain/index.html","searchKeys":["CacheChain","typealias CacheChain = List<Cache>","com.github.mizosoft.methanol.kotlin.CacheChain"]},{"name":"typealias CacheListener = HttpCache.Listener","description":"com.github.mizosoft.methanol.kotlin.CacheListener","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-cache-listener/index.html","searchKeys":["CacheListener","typealias CacheListener = HttpCache.Listener","com.github.mizosoft.methanol.kotlin.CacheListener"]},{"name":"typealias Client = Methanol","description":"com.github.mizosoft.methanol.kotlin.Client","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-client/index.html","searchKeys":["Client","typealias Client = Methanol","com.github.mizosoft.methanol.kotlin.Client"]},{"name":"typealias FormBody = FormBodyPublisher","description":"com.github.mizosoft.methanol.kotlin.FormBody","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-form-body/index.html","searchKeys":["FormBody","typealias FormBody = FormBodyPublisher","com.github.mizosoft.methanol.kotlin.FormBody"]},{"name":"typealias Headers = <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.Headers","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-headers/index.html","searchKeys":["Headers","typealias Headers = <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.Headers"]},{"name":"typealias HttpVersion = <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.HttpVersion","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-http-version/index.html","searchKeys":["HttpVersion","typealias HttpVersion = <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.HttpVersion"]},{"name":"typealias MultipartBody = MultipartBodyPublisher","description":"com.github.mizosoft.methanol.kotlin.MultipartBody","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-multipart-body/index.html","searchKeys":["MultipartBody","typealias MultipartBody = MultipartBodyPublisher","com.github.mizosoft.methanol.kotlin.MultipartBody"]},{"name":"typealias MultipartBodyPart = MultipartBodyPublisher.Part","description":"com.github.mizosoft.methanol.kotlin.MultipartBodyPart","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-multipart-body-part/index.html","searchKeys":["MultipartBodyPart","typealias MultipartBodyPart = MultipartBodyPublisher.Part","com.github.mizosoft.methanol.kotlin.MultipartBodyPart"]},{"name":"typealias PushPromiseHandler<T> = <Error class: unknown class><T>","description":"com.github.mizosoft.methanol.kotlin.PushPromiseHandler","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-push-promise-handler/index.html","searchKeys":["PushPromiseHandler","typealias PushPromiseHandler<T> = <Error class: unknown class><T>","com.github.mizosoft.methanol.kotlin.PushPromiseHandler"]},{"name":"typealias Redirect = <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.Redirect","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-redirect/index.html","searchKeys":["Redirect","typealias Redirect = <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.Redirect"]},{"name":"typealias Request = <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.Request","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-request/index.html","searchKeys":["Request","typealias Request = <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.Request"]},{"name":"typealias Response<T> = <Error class: unknown class><T>","description":"com.github.mizosoft.methanol.kotlin.Response","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-response/index.html","searchKeys":["Response","typealias Response<T> = <Error class: unknown class><T>","com.github.mizosoft.methanol.kotlin.Response"]},{"name":"typealias ResponseInfo = <Error class: unknown class>","description":"com.github.mizosoft.methanol.kotlin.ResponseInfo","location":"methanol.kotlin/com.github.mizosoft.methanol.kotlin/-response-info/index.html","searchKeys":["ResponseInfo","typealias ResponseInfo = <Error class: unknown class>","com.github.mizosoft.methanol.kotlin.ResponseInfo"]}]