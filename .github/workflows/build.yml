name: Build

on: [ push, pull_request, workflow_dispatch ]

env:
  BASE_JAVA: 21

jobs:
  tests:
    name: Test on ${{ matrix.os }} with Java ${{ matrix.java }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        java: [ 11, 21, 24 ]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Redis
        shell: bash
        # It seems there's no straightforward way to install a recent redis version on Windows, so
        # let's only consider macOS & Ubuntu for RedisStore tests.
        run: |
          if [[ "${{ matrix.os }}" == macos* ]]
          then 
            brew install redis
          elif [[ "${{ matrix.os }}" == ubuntu* ]] 
          then
            chmod +x install-redis-ubuntu.sh
            ./install-redis-ubuntu.sh
          fi

      - name: Compile
        uses: ./.github/actions/gradle
        with:
          java-version: 21
          gradle-args: compileJava -PenableErrorprone

      - name: Run tests
        uses: ./.github/actions/gradle
        with:
          java-version: ${{ matrix.java }}

          # Brotli is not currently supported on macOS so related tests are excluded there.
          gradle-args: check ${{ (startsWith(matrix.os, 'macos') && '-x :methanol-brotli:test') || '' }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ matrix.os }}-java-${{ matrix.java }}-test-results
          path: |
            **/build/test-results/
            **/build/**/*.exec

  native-tests:
    name: Run native tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Quarkus native app
        uses: ./.github/actions/gradle
        with:
          java-version: ${{ env.BASE_JAVA }}
          java-native: yes
          gradle-args: :quarkus-native-test:quarkusBuild -PincludeNativeTests

      - name: Run Quarkus native tests
        uses: ./.github/actions/gradle
        with:
          java-version: ${{ env.BASE_JAVA }}
          gradle-args: :quarkus-native-test:test -PincludeNativeTests

      - name: Run GraalVM native tests
        uses: ./.github/actions/gradle
        with:
          java-version: ${{ env.BASE_JAVA }}
          java-native: yes
          gradle-args: :native-test:build -PincludeNativeTests

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ubuntu-latest-java-${{ env.BASE_JAVA }}-native-test-results
          path: |
            **/build/test-results/
            **/build/**/*.exec

  coverage:
    name: Upload coverage report
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest-java-${{ env.BASE_JAVA }}-test-results

      - name: Generate coverage report
        uses: ./.github/actions/gradle
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        with:
          java-version: ${{ env.BASE_JAVA }}
          gradle-args: coverallsJacoco

  snapshot-release:
    name: Release snapshot
    if: |
      github.event_name == 'push'
      && github.ref_name == github.event.repository.default_branch
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Publish snapshot release artifacts
        uses: ./.github/actions/gradle
        env:
          ORG_GRADLE_PROJECT_nexusUsername: ${{ secrets.NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_nexusPassword: ${{ secrets.NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
        with:
          java-version: ${{ env.BASE_JAVA }}
          gradle-args: publishToSonatype
