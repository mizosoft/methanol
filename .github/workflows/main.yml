name: CI

on: [ push, pull_request ]

jobs:
  build:
    name: Test on ${{ matrix.os }} with Java ${{ matrix.java }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        java: [ 17 ]
    steps:
      - uses: actions/checkout@v2
      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: Install Redis
        shell: bash

        # It seems there's no straightforward way to install a recent redis version on Windows, so
        # let's only consider macOS & Ubuntu for RedisStore tests.
        run: |
          if [[ "${{ matrix.os }}" == macos* ]]
          then 
            brew install redis
          elif [[ "${{ matrix.os }}" == ubuntu* ]] 
          then
            chmod +x install-redis-ubuntu.sh
            ./install-redis-ubuntu.sh
          fi 

      - name: Restore Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/wrapper
            ~/.gradle/caches
          key: ${{ matrix.os }}-java${{ matrix.java }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ matrix.os }}-java${{ matrix.java }}-gradle
      - name: Make gradlew executable
        if: startsWith(${{ matrix.os }}, 'ubuntu') || startsWith(${{ matrix.os }}, 'macos')
        run: chmod +x gradlew

      - name: Run tests
        shell: bash
        run: | # brotli is not currently supported for mac so tests are excluded on macos
          ./gradlew -PenableErrorprone check \
          `if [[ "${{ matrix.os }}" == macos* ]]; then echo '-x :methanol-brotli:test'; fi`

      # Save test results as artifacts
      - name: Save test results
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: ${{ matrix.os }}-java${{ matrix.java }}-test-results
          path: ./*/build/test-results/

  coverage_report:
    name: Coverage report
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Setup Java 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Install Redis
        shell: bash

        # It seems there's no straightforward way to install a recent redis version on Windows, so
        # let's only consider macOS & Ubuntu for RedisStore tests.
        run: |
          if [[ "${{ matrix.os }}" == macos* ]]
          then 
            brew install redis
          elif [[ "${{ matrix.os }}" == ubuntu* ]] 
          then
            chmod +x install-redis-ubuntu.sh
            ./install-redis-ubuntu.sh
          fi  

      - name: Restore Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/wrapper
            ~/.gradle/caches
          key: ${{ runner.os }}-java17-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-java17-gradle
      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Upload JaCoCo report to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
        run: ./gradlew coveralls

      # Save test results as artifacts
      - name: Save test results
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: coverage-report-ubuntu-latest-java-17-test-results
          path: ./*/build/test-results/

  publish_snapshot:
    name: Publish artifacts
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Setup Java 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Restore Gradle cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/wrapper
            ~/.gradle/caches
          key: ${{ runner.os }}-java17-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-java17-gradle
      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Run gradle publish
        env:
          ORG_GRADLE_PROJECT_nexusUsername: ${{ secrets.NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_nexusPassword: ${{ secrets.NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingKeyId: ${{ secrets.SIGNING_KEY_ID }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
        run: ./gradlew publish -x check

  publish_site:
    name: Publish documentation site
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 17

      # MkDocs needs python to run
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9.1

      - name: Generate docs
        run: |
          chmod +x gradlew
          chmod +x ./generate-docs.sh
          ./generate-docs.sh
      - name: Deploy site
        uses: JamesIves/github-pages-deploy-action@4.1.1
        with:
          branch: gh-pages
          folder: site
